version: "3.8"

services:
  zookeeper:
    container_name: "${APP_NAME}-Zookeeper"
    image: docker.io/bitnami/zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafdrop:
    container_name: "${APP_NAME}-KafDrop"
    image: obsidiandynamics/kafdrop:latest
    environment:
      - KAFKA_BROKERCONNECT=kafka:19092
    ports:
      - ${KAFDROP_PORT}:9000
    depends_on:
      - kafka
  kafka:
    container_name: "${APP_NAME}-Kafka"
    image: docker.io/bitnami/kafka:latest
    restart: always
    ports:
      - ${KAFKA_PORT}:9092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_LISTENERS=LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER_INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_BROKER_ID=1
      - KAFKA_CREATE_TOPICS=__consumer_offsets:50:1,user.create:1:1
    depends_on:
      - zookeeper
  mongo:
    container_name: "${APP_NAME}-MongoDB"
    image: mongo
    restart: always
    volumes:
      - "mongodb_data:/data/db"
      - "configdb_data:/data/configdb"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    ports:
      - ${MONGO_DB_PORT}:27017
  mongo-express:
    container_name: "${APP_NAME}-Mongo-Express"
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_DB_USERNAME}:${MONGO_DB_PASSWORD}@mongo:${MONGO_DB_PORT}/
    depends_on:
      - mongo
  bullboard:
    container_name: "${APP_NAME}-Bullboard"
    image: deadly0/bull-board
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - ${BULLBOARD_PORT}:3000
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
  redis:
    container_name: "${APP_NAME}-Redis"
    image: redis:latest
    restart: unless-stopped
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./redis_data:/data

  redis-commander:
    container_name: "${APP_NAME}-Redis-Commander"
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - 8082:8081
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongodb_data:
    driver: local
  configdb_data:
    driver: local
  redis_data:
    driver: local